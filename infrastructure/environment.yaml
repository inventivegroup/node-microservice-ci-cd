---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Environment'
Parameters:
  ApplicationName:
    Type: String
  DatabaseName:
    Type: String
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  Stage:
    Type: String
    AllowedValues:
    - prod
    - qa
  InstanceType:
    Description: Instance Type for Application
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
  DatabaseUser:
    Default: admin
    NoEcho: 'true'
    Type: String
    Description: Database admin account name
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DatabasePasswordSSMParamName:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: example-ci-cd-db-password-qa
  DBInstanceType:
    Description: Instance Type for Database
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.m1.small
      - db.m1.medium
      - db.m1.large
Resources:
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      ManagedPolicyArns:
      - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier'
  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
      - !Ref Role
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress: []
  DBEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          SourceSecurityGroupId: !GetAtt 
            - InstanceSecurityGroup
            - GroupId
  Database:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      Engine: MySQL
      DBName: !Ref DatabaseName
      MasterUsername: !Ref DatabaseUser
      DBInstanceClass: !Ref DBInstanceType
      VPCSecurityGroups:
        - !GetAtt 
          - DBEC2SecurityGroup
          - GroupId
      AllocatedStorage: '5'
      MasterUserPassword: !Ref DatabasePasswordSSMParamName
  Environment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !Ref ApplicationName
      EnvironmentName: !Sub '${ApplicationName}-${Stage}'
      SolutionStackName: '64bit Amazon Linux 2017.09 v2.8.3 running Docker 17.06.2-ce'
      OptionSettings:
      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: 'IamInstanceProfile'
        Value: !Ref InstanceProfile
      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: InstanceType
        Value: !Ref InstanceType
      - Namespace: 'aws:autoscaling:launchconfiguration'
        OptionName: SecurityGroups
        Value: !Ref InstanceSecurityGroup
Outputs:
  EnvironmentName:
    Value: !Ref Environment
  EndpointURL:
    Value: !Sub '${Environment.EndpointURL}'